/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ChainSlugLayoutImport } from './routes/$chainSlug/_layout'
import { Route as ChainSlugLayoutIndexImport } from './routes/$chainSlug/_layout/index'
import { Route as ChainSlugLayoutWorkerpoolsImport } from './routes/$chainSlug/_layout/workerpools'
import { Route as ChainSlugLayoutTasksImport } from './routes/$chainSlug/_layout/tasks'
import { Route as ChainSlugLayoutDealsImport } from './routes/$chainSlug/_layout/deals'
import { Route as ChainSlugLayoutDatasetsImport } from './routes/$chainSlug/_layout/datasets'
import { Route as ChainSlugLayoutAppsImport } from './routes/$chainSlug/_layout/apps'
import { Route as ChainSlugLayoutSplatImport } from './routes/$chainSlug/_layout/$'
import { Route as ChainSlugLayoutAccountImport } from './routes/$chainSlug/_layout/account'
import { Route as ChainSlugLayoutWorkerpoolWorkerpoolAddressImport } from './routes/$chainSlug/_layout/workerpool/$workerpoolAddress'
import { Route as ChainSlugLayoutTxTxAddressImport } from './routes/$chainSlug/_layout/tx/$txAddress'
import { Route as ChainSlugLayoutTaskTaskAddressImport } from './routes/$chainSlug/_layout/task/$taskAddress'
import { Route as ChainSlugLayoutSearchSearchImport } from './routes/$chainSlug/_layout/search/$search'
import { Route as ChainSlugLayoutDealDealAddressImport } from './routes/$chainSlug/_layout/deal/$dealAddress'
import { Route as ChainSlugLayoutDatasetDatasetAddressImport } from './routes/$chainSlug/_layout/dataset/$datasetAddress'
import { Route as ChainSlugLayoutAppAppAddressImport } from './routes/$chainSlug/_layout/app/$appAddress'
import { Route as ChainSlugLayoutAddressAddressAddressImport } from './routes/$chainSlug/_layout/address/$addressAddress'

// Create Virtual Routes

const ChainSlugImport = createFileRoute('/$chainSlug')()

// Create/Update Routes

const ChainSlugRoute = ChainSlugImport.update({
  id: '/$chainSlug',
  path: '/$chainSlug',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ChainSlugLayoutRoute = ChainSlugLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => ChainSlugRoute,
} as any)

const ChainSlugLayoutIndexRoute = ChainSlugLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChainSlugLayoutRoute,
} as any)

const ChainSlugLayoutWorkerpoolsRoute = ChainSlugLayoutWorkerpoolsImport.update(
  {
    id: '/workerpools',
    path: '/workerpools',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any,
)

const ChainSlugLayoutTasksRoute = ChainSlugLayoutTasksImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => ChainSlugLayoutRoute,
} as any)

const ChainSlugLayoutDealsRoute = ChainSlugLayoutDealsImport.update({
  id: '/deals',
  path: '/deals',
  getParentRoute: () => ChainSlugLayoutRoute,
} as any)

const ChainSlugLayoutDatasetsRoute = ChainSlugLayoutDatasetsImport.update({
  id: '/datasets',
  path: '/datasets',
  getParentRoute: () => ChainSlugLayoutRoute,
} as any)

const ChainSlugLayoutAppsRoute = ChainSlugLayoutAppsImport.update({
  id: '/apps',
  path: '/apps',
  getParentRoute: () => ChainSlugLayoutRoute,
} as any)

const ChainSlugLayoutSplatRoute = ChainSlugLayoutSplatImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => ChainSlugLayoutRoute,
} as any)

const ChainSlugLayoutAccountRoute = ChainSlugLayoutAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => ChainSlugLayoutRoute,
} as any)

const ChainSlugLayoutWorkerpoolWorkerpoolAddressRoute =
  ChainSlugLayoutWorkerpoolWorkerpoolAddressImport.update({
    id: '/workerpool/$workerpoolAddress',
    path: '/workerpool/$workerpoolAddress',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any)

const ChainSlugLayoutTxTxAddressRoute = ChainSlugLayoutTxTxAddressImport.update(
  {
    id: '/tx/$txAddress',
    path: '/tx/$txAddress',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any,
)

const ChainSlugLayoutTaskTaskAddressRoute =
  ChainSlugLayoutTaskTaskAddressImport.update({
    id: '/task/$taskAddress',
    path: '/task/$taskAddress',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any)

const ChainSlugLayoutSearchSearchRoute =
  ChainSlugLayoutSearchSearchImport.update({
    id: '/search/$search',
    path: '/search/$search',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any)

const ChainSlugLayoutDealDealAddressRoute =
  ChainSlugLayoutDealDealAddressImport.update({
    id: '/deal/$dealAddress',
    path: '/deal/$dealAddress',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any)

const ChainSlugLayoutDatasetDatasetAddressRoute =
  ChainSlugLayoutDatasetDatasetAddressImport.update({
    id: '/dataset/$datasetAddress',
    path: '/dataset/$datasetAddress',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any)

const ChainSlugLayoutAppAppAddressRoute =
  ChainSlugLayoutAppAppAddressImport.update({
    id: '/app/$appAddress',
    path: '/app/$appAddress',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any)

const ChainSlugLayoutAddressAddressAddressRoute =
  ChainSlugLayoutAddressAddressAddressImport.update({
    id: '/address/$addressAddress',
    path: '/address/$addressAddress',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$chainSlug': {
      id: '/$chainSlug'
      path: '/$chainSlug'
      fullPath: '/$chainSlug'
      preLoaderRoute: typeof ChainSlugImport
      parentRoute: typeof rootRoute
    }
    '/$chainSlug/_layout': {
      id: '/$chainSlug/_layout'
      path: '/$chainSlug'
      fullPath: '/$chainSlug'
      preLoaderRoute: typeof ChainSlugLayoutImport
      parentRoute: typeof ChainSlugRoute
    }
    '/$chainSlug/_layout/$': {
      id: '/$chainSlug/_layout/$'
      path: '/$'
      fullPath: '/$chainSlug/$'
      preLoaderRoute: typeof ChainSlugLayoutSplatImport
      parentRoute: typeof ChainSlugLayoutImport
    }
    '/$chainSlug/_layout/account': {
      id: '/$chainSlug/_layout/account'
      path: '/account'
      fullPath: '/$chainSlug/account'
      preLoaderRoute: typeof ChainSlugLayoutAccountImport
      parentRoute: typeof ChainSlugLayoutImport
    }
    '/$chainSlug/_layout/apps': {
      id: '/$chainSlug/_layout/apps'
      path: '/apps'
      fullPath: '/$chainSlug/apps'
      preLoaderRoute: typeof ChainSlugLayoutAppsImport
      parentRoute: typeof ChainSlugLayoutImport
    }
    '/$chainSlug/_layout/datasets': {
      id: '/$chainSlug/_layout/datasets'
      path: '/datasets'
      fullPath: '/$chainSlug/datasets'
      preLoaderRoute: typeof ChainSlugLayoutDatasetsImport
      parentRoute: typeof ChainSlugLayoutImport
    }
    '/$chainSlug/_layout/deals': {
      id: '/$chainSlug/_layout/deals'
      path: '/deals'
      fullPath: '/$chainSlug/deals'
      preLoaderRoute: typeof ChainSlugLayoutDealsImport
      parentRoute: typeof ChainSlugLayoutImport
    }
    '/$chainSlug/_layout/tasks': {
      id: '/$chainSlug/_layout/tasks'
      path: '/tasks'
      fullPath: '/$chainSlug/tasks'
      preLoaderRoute: typeof ChainSlugLayoutTasksImport
      parentRoute: typeof ChainSlugLayoutImport
    }
    '/$chainSlug/_layout/workerpools': {
      id: '/$chainSlug/_layout/workerpools'
      path: '/workerpools'
      fullPath: '/$chainSlug/workerpools'
      preLoaderRoute: typeof ChainSlugLayoutWorkerpoolsImport
      parentRoute: typeof ChainSlugLayoutImport
    }
    '/$chainSlug/_layout/': {
      id: '/$chainSlug/_layout/'
      path: '/'
      fullPath: '/$chainSlug/'
      preLoaderRoute: typeof ChainSlugLayoutIndexImport
      parentRoute: typeof ChainSlugLayoutImport
    }
    '/$chainSlug/_layout/address/$addressAddress': {
      id: '/$chainSlug/_layout/address/$addressAddress'
      path: '/address/$addressAddress'
      fullPath: '/$chainSlug/address/$addressAddress'
      preLoaderRoute: typeof ChainSlugLayoutAddressAddressAddressImport
      parentRoute: typeof ChainSlugLayoutImport
    }
    '/$chainSlug/_layout/app/$appAddress': {
      id: '/$chainSlug/_layout/app/$appAddress'
      path: '/app/$appAddress'
      fullPath: '/$chainSlug/app/$appAddress'
      preLoaderRoute: typeof ChainSlugLayoutAppAppAddressImport
      parentRoute: typeof ChainSlugLayoutImport
    }
    '/$chainSlug/_layout/dataset/$datasetAddress': {
      id: '/$chainSlug/_layout/dataset/$datasetAddress'
      path: '/dataset/$datasetAddress'
      fullPath: '/$chainSlug/dataset/$datasetAddress'
      preLoaderRoute: typeof ChainSlugLayoutDatasetDatasetAddressImport
      parentRoute: typeof ChainSlugLayoutImport
    }
    '/$chainSlug/_layout/deal/$dealAddress': {
      id: '/$chainSlug/_layout/deal/$dealAddress'
      path: '/deal/$dealAddress'
      fullPath: '/$chainSlug/deal/$dealAddress'
      preLoaderRoute: typeof ChainSlugLayoutDealDealAddressImport
      parentRoute: typeof ChainSlugLayoutImport
    }
    '/$chainSlug/_layout/search/$search': {
      id: '/$chainSlug/_layout/search/$search'
      path: '/search/$search'
      fullPath: '/$chainSlug/search/$search'
      preLoaderRoute: typeof ChainSlugLayoutSearchSearchImport
      parentRoute: typeof ChainSlugLayoutImport
    }
    '/$chainSlug/_layout/task/$taskAddress': {
      id: '/$chainSlug/_layout/task/$taskAddress'
      path: '/task/$taskAddress'
      fullPath: '/$chainSlug/task/$taskAddress'
      preLoaderRoute: typeof ChainSlugLayoutTaskTaskAddressImport
      parentRoute: typeof ChainSlugLayoutImport
    }
    '/$chainSlug/_layout/tx/$txAddress': {
      id: '/$chainSlug/_layout/tx/$txAddress'
      path: '/tx/$txAddress'
      fullPath: '/$chainSlug/tx/$txAddress'
      preLoaderRoute: typeof ChainSlugLayoutTxTxAddressImport
      parentRoute: typeof ChainSlugLayoutImport
    }
    '/$chainSlug/_layout/workerpool/$workerpoolAddress': {
      id: '/$chainSlug/_layout/workerpool/$workerpoolAddress'
      path: '/workerpool/$workerpoolAddress'
      fullPath: '/$chainSlug/workerpool/$workerpoolAddress'
      preLoaderRoute: typeof ChainSlugLayoutWorkerpoolWorkerpoolAddressImport
      parentRoute: typeof ChainSlugLayoutImport
    }
  }
}

// Create and export the route tree

interface ChainSlugLayoutRouteChildren {
  ChainSlugLayoutSplatRoute: typeof ChainSlugLayoutSplatRoute
  ChainSlugLayoutAccountRoute: typeof ChainSlugLayoutAccountRoute
  ChainSlugLayoutAppsRoute: typeof ChainSlugLayoutAppsRoute
  ChainSlugLayoutDatasetsRoute: typeof ChainSlugLayoutDatasetsRoute
  ChainSlugLayoutDealsRoute: typeof ChainSlugLayoutDealsRoute
  ChainSlugLayoutTasksRoute: typeof ChainSlugLayoutTasksRoute
  ChainSlugLayoutWorkerpoolsRoute: typeof ChainSlugLayoutWorkerpoolsRoute
  ChainSlugLayoutIndexRoute: typeof ChainSlugLayoutIndexRoute
  ChainSlugLayoutAddressAddressAddressRoute: typeof ChainSlugLayoutAddressAddressAddressRoute
  ChainSlugLayoutAppAppAddressRoute: typeof ChainSlugLayoutAppAppAddressRoute
  ChainSlugLayoutDatasetDatasetAddressRoute: typeof ChainSlugLayoutDatasetDatasetAddressRoute
  ChainSlugLayoutDealDealAddressRoute: typeof ChainSlugLayoutDealDealAddressRoute
  ChainSlugLayoutSearchSearchRoute: typeof ChainSlugLayoutSearchSearchRoute
  ChainSlugLayoutTaskTaskAddressRoute: typeof ChainSlugLayoutTaskTaskAddressRoute
  ChainSlugLayoutTxTxAddressRoute: typeof ChainSlugLayoutTxTxAddressRoute
  ChainSlugLayoutWorkerpoolWorkerpoolAddressRoute: typeof ChainSlugLayoutWorkerpoolWorkerpoolAddressRoute
}

const ChainSlugLayoutRouteChildren: ChainSlugLayoutRouteChildren = {
  ChainSlugLayoutSplatRoute: ChainSlugLayoutSplatRoute,
  ChainSlugLayoutAccountRoute: ChainSlugLayoutAccountRoute,
  ChainSlugLayoutAppsRoute: ChainSlugLayoutAppsRoute,
  ChainSlugLayoutDatasetsRoute: ChainSlugLayoutDatasetsRoute,
  ChainSlugLayoutDealsRoute: ChainSlugLayoutDealsRoute,
  ChainSlugLayoutTasksRoute: ChainSlugLayoutTasksRoute,
  ChainSlugLayoutWorkerpoolsRoute: ChainSlugLayoutWorkerpoolsRoute,
  ChainSlugLayoutIndexRoute: ChainSlugLayoutIndexRoute,
  ChainSlugLayoutAddressAddressAddressRoute:
    ChainSlugLayoutAddressAddressAddressRoute,
  ChainSlugLayoutAppAppAddressRoute: ChainSlugLayoutAppAppAddressRoute,
  ChainSlugLayoutDatasetDatasetAddressRoute:
    ChainSlugLayoutDatasetDatasetAddressRoute,
  ChainSlugLayoutDealDealAddressRoute: ChainSlugLayoutDealDealAddressRoute,
  ChainSlugLayoutSearchSearchRoute: ChainSlugLayoutSearchSearchRoute,
  ChainSlugLayoutTaskTaskAddressRoute: ChainSlugLayoutTaskTaskAddressRoute,
  ChainSlugLayoutTxTxAddressRoute: ChainSlugLayoutTxTxAddressRoute,
  ChainSlugLayoutWorkerpoolWorkerpoolAddressRoute:
    ChainSlugLayoutWorkerpoolWorkerpoolAddressRoute,
}

const ChainSlugLayoutRouteWithChildren = ChainSlugLayoutRoute._addFileChildren(
  ChainSlugLayoutRouteChildren,
)

interface ChainSlugRouteChildren {
  ChainSlugLayoutRoute: typeof ChainSlugLayoutRouteWithChildren
}

const ChainSlugRouteChildren: ChainSlugRouteChildren = {
  ChainSlugLayoutRoute: ChainSlugLayoutRouteWithChildren,
}

const ChainSlugRouteWithChildren = ChainSlugRoute._addFileChildren(
  ChainSlugRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$chainSlug': typeof ChainSlugLayoutRouteWithChildren
  '/$chainSlug/$': typeof ChainSlugLayoutSplatRoute
  '/$chainSlug/account': typeof ChainSlugLayoutAccountRoute
  '/$chainSlug/apps': typeof ChainSlugLayoutAppsRoute
  '/$chainSlug/datasets': typeof ChainSlugLayoutDatasetsRoute
  '/$chainSlug/deals': typeof ChainSlugLayoutDealsRoute
  '/$chainSlug/tasks': typeof ChainSlugLayoutTasksRoute
  '/$chainSlug/workerpools': typeof ChainSlugLayoutWorkerpoolsRoute
  '/$chainSlug/': typeof ChainSlugLayoutIndexRoute
  '/$chainSlug/address/$addressAddress': typeof ChainSlugLayoutAddressAddressAddressRoute
  '/$chainSlug/app/$appAddress': typeof ChainSlugLayoutAppAppAddressRoute
  '/$chainSlug/dataset/$datasetAddress': typeof ChainSlugLayoutDatasetDatasetAddressRoute
  '/$chainSlug/deal/$dealAddress': typeof ChainSlugLayoutDealDealAddressRoute
  '/$chainSlug/search/$search': typeof ChainSlugLayoutSearchSearchRoute
  '/$chainSlug/task/$taskAddress': typeof ChainSlugLayoutTaskTaskAddressRoute
  '/$chainSlug/tx/$txAddress': typeof ChainSlugLayoutTxTxAddressRoute
  '/$chainSlug/workerpool/$workerpoolAddress': typeof ChainSlugLayoutWorkerpoolWorkerpoolAddressRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$chainSlug': typeof ChainSlugLayoutIndexRoute
  '/$chainSlug/$': typeof ChainSlugLayoutSplatRoute
  '/$chainSlug/account': typeof ChainSlugLayoutAccountRoute
  '/$chainSlug/apps': typeof ChainSlugLayoutAppsRoute
  '/$chainSlug/datasets': typeof ChainSlugLayoutDatasetsRoute
  '/$chainSlug/deals': typeof ChainSlugLayoutDealsRoute
  '/$chainSlug/tasks': typeof ChainSlugLayoutTasksRoute
  '/$chainSlug/workerpools': typeof ChainSlugLayoutWorkerpoolsRoute
  '/$chainSlug/address/$addressAddress': typeof ChainSlugLayoutAddressAddressAddressRoute
  '/$chainSlug/app/$appAddress': typeof ChainSlugLayoutAppAppAddressRoute
  '/$chainSlug/dataset/$datasetAddress': typeof ChainSlugLayoutDatasetDatasetAddressRoute
  '/$chainSlug/deal/$dealAddress': typeof ChainSlugLayoutDealDealAddressRoute
  '/$chainSlug/search/$search': typeof ChainSlugLayoutSearchSearchRoute
  '/$chainSlug/task/$taskAddress': typeof ChainSlugLayoutTaskTaskAddressRoute
  '/$chainSlug/tx/$txAddress': typeof ChainSlugLayoutTxTxAddressRoute
  '/$chainSlug/workerpool/$workerpoolAddress': typeof ChainSlugLayoutWorkerpoolWorkerpoolAddressRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$chainSlug': typeof ChainSlugRouteWithChildren
  '/$chainSlug/_layout': typeof ChainSlugLayoutRouteWithChildren
  '/$chainSlug/_layout/$': typeof ChainSlugLayoutSplatRoute
  '/$chainSlug/_layout/account': typeof ChainSlugLayoutAccountRoute
  '/$chainSlug/_layout/apps': typeof ChainSlugLayoutAppsRoute
  '/$chainSlug/_layout/datasets': typeof ChainSlugLayoutDatasetsRoute
  '/$chainSlug/_layout/deals': typeof ChainSlugLayoutDealsRoute
  '/$chainSlug/_layout/tasks': typeof ChainSlugLayoutTasksRoute
  '/$chainSlug/_layout/workerpools': typeof ChainSlugLayoutWorkerpoolsRoute
  '/$chainSlug/_layout/': typeof ChainSlugLayoutIndexRoute
  '/$chainSlug/_layout/address/$addressAddress': typeof ChainSlugLayoutAddressAddressAddressRoute
  '/$chainSlug/_layout/app/$appAddress': typeof ChainSlugLayoutAppAppAddressRoute
  '/$chainSlug/_layout/dataset/$datasetAddress': typeof ChainSlugLayoutDatasetDatasetAddressRoute
  '/$chainSlug/_layout/deal/$dealAddress': typeof ChainSlugLayoutDealDealAddressRoute
  '/$chainSlug/_layout/search/$search': typeof ChainSlugLayoutSearchSearchRoute
  '/$chainSlug/_layout/task/$taskAddress': typeof ChainSlugLayoutTaskTaskAddressRoute
  '/$chainSlug/_layout/tx/$txAddress': typeof ChainSlugLayoutTxTxAddressRoute
  '/$chainSlug/_layout/workerpool/$workerpoolAddress': typeof ChainSlugLayoutWorkerpoolWorkerpoolAddressRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$chainSlug'
    | '/$chainSlug/$'
    | '/$chainSlug/account'
    | '/$chainSlug/apps'
    | '/$chainSlug/datasets'
    | '/$chainSlug/deals'
    | '/$chainSlug/tasks'
    | '/$chainSlug/workerpools'
    | '/$chainSlug/'
    | '/$chainSlug/address/$addressAddress'
    | '/$chainSlug/app/$appAddress'
    | '/$chainSlug/dataset/$datasetAddress'
    | '/$chainSlug/deal/$dealAddress'
    | '/$chainSlug/search/$search'
    | '/$chainSlug/task/$taskAddress'
    | '/$chainSlug/tx/$txAddress'
    | '/$chainSlug/workerpool/$workerpoolAddress'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$chainSlug'
    | '/$chainSlug/$'
    | '/$chainSlug/account'
    | '/$chainSlug/apps'
    | '/$chainSlug/datasets'
    | '/$chainSlug/deals'
    | '/$chainSlug/tasks'
    | '/$chainSlug/workerpools'
    | '/$chainSlug/address/$addressAddress'
    | '/$chainSlug/app/$appAddress'
    | '/$chainSlug/dataset/$datasetAddress'
    | '/$chainSlug/deal/$dealAddress'
    | '/$chainSlug/search/$search'
    | '/$chainSlug/task/$taskAddress'
    | '/$chainSlug/tx/$txAddress'
    | '/$chainSlug/workerpool/$workerpoolAddress'
  id:
    | '__root__'
    | '/'
    | '/$chainSlug'
    | '/$chainSlug/_layout'
    | '/$chainSlug/_layout/$'
    | '/$chainSlug/_layout/account'
    | '/$chainSlug/_layout/apps'
    | '/$chainSlug/_layout/datasets'
    | '/$chainSlug/_layout/deals'
    | '/$chainSlug/_layout/tasks'
    | '/$chainSlug/_layout/workerpools'
    | '/$chainSlug/_layout/'
    | '/$chainSlug/_layout/address/$addressAddress'
    | '/$chainSlug/_layout/app/$appAddress'
    | '/$chainSlug/_layout/dataset/$datasetAddress'
    | '/$chainSlug/_layout/deal/$dealAddress'
    | '/$chainSlug/_layout/search/$search'
    | '/$chainSlug/_layout/task/$taskAddress'
    | '/$chainSlug/_layout/tx/$txAddress'
    | '/$chainSlug/_layout/workerpool/$workerpoolAddress'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChainSlugRoute: typeof ChainSlugRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChainSlugRoute: ChainSlugRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$chainSlug"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$chainSlug": {
      "filePath": "$chainSlug",
      "children": [
        "/$chainSlug/_layout"
      ]
    },
    "/$chainSlug/_layout": {
      "filePath": "$chainSlug/_layout.tsx",
      "parent": "/$chainSlug",
      "children": [
        "/$chainSlug/_layout/$",
        "/$chainSlug/_layout/account",
        "/$chainSlug/_layout/apps",
        "/$chainSlug/_layout/datasets",
        "/$chainSlug/_layout/deals",
        "/$chainSlug/_layout/tasks",
        "/$chainSlug/_layout/workerpools",
        "/$chainSlug/_layout/",
        "/$chainSlug/_layout/address/$addressAddress",
        "/$chainSlug/_layout/app/$appAddress",
        "/$chainSlug/_layout/dataset/$datasetAddress",
        "/$chainSlug/_layout/deal/$dealAddress",
        "/$chainSlug/_layout/search/$search",
        "/$chainSlug/_layout/task/$taskAddress",
        "/$chainSlug/_layout/tx/$txAddress",
        "/$chainSlug/_layout/workerpool/$workerpoolAddress"
      ]
    },
    "/$chainSlug/_layout/$": {
      "filePath": "$chainSlug/_layout/$.tsx",
      "parent": "/$chainSlug/_layout"
    },
    "/$chainSlug/_layout/account": {
      "filePath": "$chainSlug/_layout/account.tsx",
      "parent": "/$chainSlug/_layout"
    },
    "/$chainSlug/_layout/apps": {
      "filePath": "$chainSlug/_layout/apps.tsx",
      "parent": "/$chainSlug/_layout"
    },
    "/$chainSlug/_layout/datasets": {
      "filePath": "$chainSlug/_layout/datasets.tsx",
      "parent": "/$chainSlug/_layout"
    },
    "/$chainSlug/_layout/deals": {
      "filePath": "$chainSlug/_layout/deals.tsx",
      "parent": "/$chainSlug/_layout"
    },
    "/$chainSlug/_layout/tasks": {
      "filePath": "$chainSlug/_layout/tasks.tsx",
      "parent": "/$chainSlug/_layout"
    },
    "/$chainSlug/_layout/workerpools": {
      "filePath": "$chainSlug/_layout/workerpools.tsx",
      "parent": "/$chainSlug/_layout"
    },
    "/$chainSlug/_layout/": {
      "filePath": "$chainSlug/_layout/index.tsx",
      "parent": "/$chainSlug/_layout"
    },
    "/$chainSlug/_layout/address/$addressAddress": {
      "filePath": "$chainSlug/_layout/address/$addressAddress.tsx",
      "parent": "/$chainSlug/_layout"
    },
    "/$chainSlug/_layout/app/$appAddress": {
      "filePath": "$chainSlug/_layout/app/$appAddress.tsx",
      "parent": "/$chainSlug/_layout"
    },
    "/$chainSlug/_layout/dataset/$datasetAddress": {
      "filePath": "$chainSlug/_layout/dataset/$datasetAddress.tsx",
      "parent": "/$chainSlug/_layout"
    },
    "/$chainSlug/_layout/deal/$dealAddress": {
      "filePath": "$chainSlug/_layout/deal/$dealAddress.tsx",
      "parent": "/$chainSlug/_layout"
    },
    "/$chainSlug/_layout/search/$search": {
      "filePath": "$chainSlug/_layout/search/$search.tsx",
      "parent": "/$chainSlug/_layout"
    },
    "/$chainSlug/_layout/task/$taskAddress": {
      "filePath": "$chainSlug/_layout/task/$taskAddress.tsx",
      "parent": "/$chainSlug/_layout"
    },
    "/$chainSlug/_layout/tx/$txAddress": {
      "filePath": "$chainSlug/_layout/tx/$txAddress.tsx",
      "parent": "/$chainSlug/_layout"
    },
    "/$chainSlug/_layout/workerpool/$workerpoolAddress": {
      "filePath": "$chainSlug/_layout/workerpool/$workerpoolAddress.tsx",
      "parent": "/$chainSlug/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
