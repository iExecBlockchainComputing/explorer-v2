/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WorkerpoolImport } from './routes/workerpool'
import { Route as TaskImport } from './routes/task'
import { Route as DealImport } from './routes/deal'
import { Route as DatasetImport } from './routes/dataset'
import { Route as AppsImport } from './routes/apps'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const WorkerpoolRoute = WorkerpoolImport.update({
  id: '/workerpool',
  path: '/workerpool',
  getParentRoute: () => rootRoute,
} as any)

const TaskRoute = TaskImport.update({
  id: '/task',
  path: '/task',
  getParentRoute: () => rootRoute,
} as any)

const DealRoute = DealImport.update({
  id: '/deal',
  path: '/deal',
  getParentRoute: () => rootRoute,
} as any)

const DatasetRoute = DatasetImport.update({
  id: '/dataset',
  path: '/dataset',
  getParentRoute: () => rootRoute,
} as any)

const AppsRoute = AppsImport.update({
  id: '/apps',
  path: '/apps',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/apps': {
      id: '/apps'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AppsImport
      parentRoute: typeof rootRoute
    }
    '/dataset': {
      id: '/dataset'
      path: '/dataset'
      fullPath: '/dataset'
      preLoaderRoute: typeof DatasetImport
      parentRoute: typeof rootRoute
    }
    '/deal': {
      id: '/deal'
      path: '/deal'
      fullPath: '/deal'
      preLoaderRoute: typeof DealImport
      parentRoute: typeof rootRoute
    }
    '/task': {
      id: '/task'
      path: '/task'
      fullPath: '/task'
      preLoaderRoute: typeof TaskImport
      parentRoute: typeof rootRoute
    }
    '/workerpool': {
      id: '/workerpool'
      path: '/workerpool'
      fullPath: '/workerpool'
      preLoaderRoute: typeof WorkerpoolImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/apps': typeof AppsRoute
  '/dataset': typeof DatasetRoute
  '/deal': typeof DealRoute
  '/task': typeof TaskRoute
  '/workerpool': typeof WorkerpoolRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/apps': typeof AppsRoute
  '/dataset': typeof DatasetRoute
  '/deal': typeof DealRoute
  '/task': typeof TaskRoute
  '/workerpool': typeof WorkerpoolRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/apps': typeof AppsRoute
  '/dataset': typeof DatasetRoute
  '/deal': typeof DealRoute
  '/task': typeof TaskRoute
  '/workerpool': typeof WorkerpoolRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/apps' | '/dataset' | '/deal' | '/task' | '/workerpool'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/apps' | '/dataset' | '/deal' | '/task' | '/workerpool'
  id:
    | '__root__'
    | '/'
    | '/apps'
    | '/dataset'
    | '/deal'
    | '/task'
    | '/workerpool'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppsRoute: typeof AppsRoute
  DatasetRoute: typeof DatasetRoute
  DealRoute: typeof DealRoute
  TaskRoute: typeof TaskRoute
  WorkerpoolRoute: typeof WorkerpoolRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppsRoute: AppsRoute,
  DatasetRoute: DatasetRoute,
  DealRoute: DealRoute,
  TaskRoute: TaskRoute,
  WorkerpoolRoute: WorkerpoolRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/apps",
        "/dataset",
        "/deal",
        "/task",
        "/workerpool"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/apps": {
      "filePath": "apps.tsx"
    },
    "/dataset": {
      "filePath": "dataset.tsx"
    },
    "/deal": {
      "filePath": "deal.tsx"
    },
    "/task": {
      "filePath": "task.tsx"
    },
    "/workerpool": {
      "filePath": "workerpool.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
