/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ChainSlugLayoutRouteImport } from './routes/$chainSlug/_layout'
import { Route as ChainSlugLayoutIndexRouteImport } from './routes/$chainSlug/_layout/index'
import { Route as ChainSlugLayoutWorkerpoolsRouteImport } from './routes/$chainSlug/_layout/workerpools'
import { Route as ChainSlugLayoutTasksRouteImport } from './routes/$chainSlug/_layout/tasks'
import { Route as ChainSlugLayoutDealsRouteImport } from './routes/$chainSlug/_layout/deals'
import { Route as ChainSlugLayoutDatasetsRouteImport } from './routes/$chainSlug/_layout/datasets'
import { Route as ChainSlugLayoutAppsRouteImport } from './routes/$chainSlug/_layout/apps'
import { Route as ChainSlugLayoutAccountRouteImport } from './routes/$chainSlug/_layout/account'
import { Route as ChainSlugLayoutSplatRouteImport } from './routes/$chainSlug/_layout/$'
import { Route as ChainSlugLayoutWorkerpoolWorkerpoolAddressRouteImport } from './routes/$chainSlug/_layout/workerpool/$workerpoolAddress'
import { Route as ChainSlugLayoutTxTxHashRouteImport } from './routes/$chainSlug/_layout/tx/$txHash'
import { Route as ChainSlugLayoutTaskTaskIdRouteImport } from './routes/$chainSlug/_layout/task/$taskId'
import { Route as ChainSlugLayoutSearchSearchRouteImport } from './routes/$chainSlug/_layout/search/$search'
import { Route as ChainSlugLayoutDealDealIdRouteImport } from './routes/$chainSlug/_layout/deal/$dealId'
import { Route as ChainSlugLayoutDatasetDatasetAddressRouteImport } from './routes/$chainSlug/_layout/dataset/$datasetAddress'
import { Route as ChainSlugLayoutAppAppAddressRouteImport } from './routes/$chainSlug/_layout/app/$appAddress'
import { Route as ChainSlugLayoutAddressAddressAddressRouteImport } from './routes/$chainSlug/_layout/address/$addressAddress'

const ChainSlugRouteImport = createFileRoute('/$chainSlug')()

const ChainSlugRoute = ChainSlugRouteImport.update({
  id: '/$chainSlug',
  path: '/$chainSlug',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChainSlugLayoutRoute = ChainSlugLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => ChainSlugRoute,
} as any)
const ChainSlugLayoutIndexRoute = ChainSlugLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChainSlugLayoutRoute,
} as any)
const ChainSlugLayoutWorkerpoolsRoute =
  ChainSlugLayoutWorkerpoolsRouteImport.update({
    id: '/workerpools',
    path: '/workerpools',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any)
const ChainSlugLayoutTasksRoute = ChainSlugLayoutTasksRouteImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => ChainSlugLayoutRoute,
} as any)
const ChainSlugLayoutDealsRoute = ChainSlugLayoutDealsRouteImport.update({
  id: '/deals',
  path: '/deals',
  getParentRoute: () => ChainSlugLayoutRoute,
} as any)
const ChainSlugLayoutDatasetsRoute = ChainSlugLayoutDatasetsRouteImport.update({
  id: '/datasets',
  path: '/datasets',
  getParentRoute: () => ChainSlugLayoutRoute,
} as any)
const ChainSlugLayoutAppsRoute = ChainSlugLayoutAppsRouteImport.update({
  id: '/apps',
  path: '/apps',
  getParentRoute: () => ChainSlugLayoutRoute,
} as any)
const ChainSlugLayoutAccountRoute = ChainSlugLayoutAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => ChainSlugLayoutRoute,
} as any)
const ChainSlugLayoutSplatRoute = ChainSlugLayoutSplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => ChainSlugLayoutRoute,
} as any)
const ChainSlugLayoutWorkerpoolWorkerpoolAddressRoute =
  ChainSlugLayoutWorkerpoolWorkerpoolAddressRouteImport.update({
    id: '/workerpool/$workerpoolAddress',
    path: '/workerpool/$workerpoolAddress',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any)
const ChainSlugLayoutTxTxHashRoute = ChainSlugLayoutTxTxHashRouteImport.update({
  id: '/tx/$txHash',
  path: '/tx/$txHash',
  getParentRoute: () => ChainSlugLayoutRoute,
} as any)
const ChainSlugLayoutTaskTaskIdRoute =
  ChainSlugLayoutTaskTaskIdRouteImport.update({
    id: '/task/$taskId',
    path: '/task/$taskId',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any)
const ChainSlugLayoutSearchSearchRoute =
  ChainSlugLayoutSearchSearchRouteImport.update({
    id: '/search/$search',
    path: '/search/$search',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any)
const ChainSlugLayoutDealDealIdRoute =
  ChainSlugLayoutDealDealIdRouteImport.update({
    id: '/deal/$dealId',
    path: '/deal/$dealId',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any)
const ChainSlugLayoutDatasetDatasetAddressRoute =
  ChainSlugLayoutDatasetDatasetAddressRouteImport.update({
    id: '/dataset/$datasetAddress',
    path: '/dataset/$datasetAddress',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any)
const ChainSlugLayoutAppAppAddressRoute =
  ChainSlugLayoutAppAppAddressRouteImport.update({
    id: '/app/$appAddress',
    path: '/app/$appAddress',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any)
const ChainSlugLayoutAddressAddressAddressRoute =
  ChainSlugLayoutAddressAddressAddressRouteImport.update({
    id: '/address/$addressAddress',
    path: '/address/$addressAddress',
    getParentRoute: () => ChainSlugLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$chainSlug': typeof ChainSlugLayoutRouteWithChildren
  '/$chainSlug/$': typeof ChainSlugLayoutSplatRoute
  '/$chainSlug/account': typeof ChainSlugLayoutAccountRoute
  '/$chainSlug/apps': typeof ChainSlugLayoutAppsRoute
  '/$chainSlug/datasets': typeof ChainSlugLayoutDatasetsRoute
  '/$chainSlug/deals': typeof ChainSlugLayoutDealsRoute
  '/$chainSlug/tasks': typeof ChainSlugLayoutTasksRoute
  '/$chainSlug/workerpools': typeof ChainSlugLayoutWorkerpoolsRoute
  '/$chainSlug/': typeof ChainSlugLayoutIndexRoute
  '/$chainSlug/address/$addressAddress': typeof ChainSlugLayoutAddressAddressAddressRoute
  '/$chainSlug/app/$appAddress': typeof ChainSlugLayoutAppAppAddressRoute
  '/$chainSlug/dataset/$datasetAddress': typeof ChainSlugLayoutDatasetDatasetAddressRoute
  '/$chainSlug/deal/$dealId': typeof ChainSlugLayoutDealDealIdRoute
  '/$chainSlug/search/$search': typeof ChainSlugLayoutSearchSearchRoute
  '/$chainSlug/task/$taskId': typeof ChainSlugLayoutTaskTaskIdRoute
  '/$chainSlug/tx/$txHash': typeof ChainSlugLayoutTxTxHashRoute
  '/$chainSlug/workerpool/$workerpoolAddress': typeof ChainSlugLayoutWorkerpoolWorkerpoolAddressRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$chainSlug': typeof ChainSlugLayoutIndexRoute
  '/$chainSlug/$': typeof ChainSlugLayoutSplatRoute
  '/$chainSlug/account': typeof ChainSlugLayoutAccountRoute
  '/$chainSlug/apps': typeof ChainSlugLayoutAppsRoute
  '/$chainSlug/datasets': typeof ChainSlugLayoutDatasetsRoute
  '/$chainSlug/deals': typeof ChainSlugLayoutDealsRoute
  '/$chainSlug/tasks': typeof ChainSlugLayoutTasksRoute
  '/$chainSlug/workerpools': typeof ChainSlugLayoutWorkerpoolsRoute
  '/$chainSlug/address/$addressAddress': typeof ChainSlugLayoutAddressAddressAddressRoute
  '/$chainSlug/app/$appAddress': typeof ChainSlugLayoutAppAppAddressRoute
  '/$chainSlug/dataset/$datasetAddress': typeof ChainSlugLayoutDatasetDatasetAddressRoute
  '/$chainSlug/deal/$dealId': typeof ChainSlugLayoutDealDealIdRoute
  '/$chainSlug/search/$search': typeof ChainSlugLayoutSearchSearchRoute
  '/$chainSlug/task/$taskId': typeof ChainSlugLayoutTaskTaskIdRoute
  '/$chainSlug/tx/$txHash': typeof ChainSlugLayoutTxTxHashRoute
  '/$chainSlug/workerpool/$workerpoolAddress': typeof ChainSlugLayoutWorkerpoolWorkerpoolAddressRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$chainSlug': typeof ChainSlugRouteWithChildren
  '/$chainSlug/_layout': typeof ChainSlugLayoutRouteWithChildren
  '/$chainSlug/_layout/$': typeof ChainSlugLayoutSplatRoute
  '/$chainSlug/_layout/account': typeof ChainSlugLayoutAccountRoute
  '/$chainSlug/_layout/apps': typeof ChainSlugLayoutAppsRoute
  '/$chainSlug/_layout/datasets': typeof ChainSlugLayoutDatasetsRoute
  '/$chainSlug/_layout/deals': typeof ChainSlugLayoutDealsRoute
  '/$chainSlug/_layout/tasks': typeof ChainSlugLayoutTasksRoute
  '/$chainSlug/_layout/workerpools': typeof ChainSlugLayoutWorkerpoolsRoute
  '/$chainSlug/_layout/': typeof ChainSlugLayoutIndexRoute
  '/$chainSlug/_layout/address/$addressAddress': typeof ChainSlugLayoutAddressAddressAddressRoute
  '/$chainSlug/_layout/app/$appAddress': typeof ChainSlugLayoutAppAppAddressRoute
  '/$chainSlug/_layout/dataset/$datasetAddress': typeof ChainSlugLayoutDatasetDatasetAddressRoute
  '/$chainSlug/_layout/deal/$dealId': typeof ChainSlugLayoutDealDealIdRoute
  '/$chainSlug/_layout/search/$search': typeof ChainSlugLayoutSearchSearchRoute
  '/$chainSlug/_layout/task/$taskId': typeof ChainSlugLayoutTaskTaskIdRoute
  '/$chainSlug/_layout/tx/$txHash': typeof ChainSlugLayoutTxTxHashRoute
  '/$chainSlug/_layout/workerpool/$workerpoolAddress': typeof ChainSlugLayoutWorkerpoolWorkerpoolAddressRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$chainSlug'
    | '/$chainSlug/$'
    | '/$chainSlug/account'
    | '/$chainSlug/apps'
    | '/$chainSlug/datasets'
    | '/$chainSlug/deals'
    | '/$chainSlug/tasks'
    | '/$chainSlug/workerpools'
    | '/$chainSlug/'
    | '/$chainSlug/address/$addressAddress'
    | '/$chainSlug/app/$appAddress'
    | '/$chainSlug/dataset/$datasetAddress'
    | '/$chainSlug/deal/$dealId'
    | '/$chainSlug/search/$search'
    | '/$chainSlug/task/$taskId'
    | '/$chainSlug/tx/$txHash'
    | '/$chainSlug/workerpool/$workerpoolAddress'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$chainSlug'
    | '/$chainSlug/$'
    | '/$chainSlug/account'
    | '/$chainSlug/apps'
    | '/$chainSlug/datasets'
    | '/$chainSlug/deals'
    | '/$chainSlug/tasks'
    | '/$chainSlug/workerpools'
    | '/$chainSlug/address/$addressAddress'
    | '/$chainSlug/app/$appAddress'
    | '/$chainSlug/dataset/$datasetAddress'
    | '/$chainSlug/deal/$dealId'
    | '/$chainSlug/search/$search'
    | '/$chainSlug/task/$taskId'
    | '/$chainSlug/tx/$txHash'
    | '/$chainSlug/workerpool/$workerpoolAddress'
  id:
    | '__root__'
    | '/'
    | '/$chainSlug'
    | '/$chainSlug/_layout'
    | '/$chainSlug/_layout/$'
    | '/$chainSlug/_layout/account'
    | '/$chainSlug/_layout/apps'
    | '/$chainSlug/_layout/datasets'
    | '/$chainSlug/_layout/deals'
    | '/$chainSlug/_layout/tasks'
    | '/$chainSlug/_layout/workerpools'
    | '/$chainSlug/_layout/'
    | '/$chainSlug/_layout/address/$addressAddress'
    | '/$chainSlug/_layout/app/$appAddress'
    | '/$chainSlug/_layout/dataset/$datasetAddress'
    | '/$chainSlug/_layout/deal/$dealId'
    | '/$chainSlug/_layout/search/$search'
    | '/$chainSlug/_layout/task/$taskId'
    | '/$chainSlug/_layout/tx/$txHash'
    | '/$chainSlug/_layout/workerpool/$workerpoolAddress'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChainSlugRoute: typeof ChainSlugRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$chainSlug': {
      id: '/$chainSlug'
      path: '/$chainSlug'
      fullPath: '/$chainSlug'
      preLoaderRoute: typeof ChainSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$chainSlug/_layout': {
      id: '/$chainSlug/_layout'
      path: '/$chainSlug'
      fullPath: '/$chainSlug'
      preLoaderRoute: typeof ChainSlugLayoutRouteImport
      parentRoute: typeof ChainSlugRoute
    }
    '/$chainSlug/_layout/': {
      id: '/$chainSlug/_layout/'
      path: '/'
      fullPath: '/$chainSlug/'
      preLoaderRoute: typeof ChainSlugLayoutIndexRouteImport
      parentRoute: typeof ChainSlugLayoutRoute
    }
    '/$chainSlug/_layout/workerpools': {
      id: '/$chainSlug/_layout/workerpools'
      path: '/workerpools'
      fullPath: '/$chainSlug/workerpools'
      preLoaderRoute: typeof ChainSlugLayoutWorkerpoolsRouteImport
      parentRoute: typeof ChainSlugLayoutRoute
    }
    '/$chainSlug/_layout/tasks': {
      id: '/$chainSlug/_layout/tasks'
      path: '/tasks'
      fullPath: '/$chainSlug/tasks'
      preLoaderRoute: typeof ChainSlugLayoutTasksRouteImport
      parentRoute: typeof ChainSlugLayoutRoute
    }
    '/$chainSlug/_layout/deals': {
      id: '/$chainSlug/_layout/deals'
      path: '/deals'
      fullPath: '/$chainSlug/deals'
      preLoaderRoute: typeof ChainSlugLayoutDealsRouteImport
      parentRoute: typeof ChainSlugLayoutRoute
    }
    '/$chainSlug/_layout/datasets': {
      id: '/$chainSlug/_layout/datasets'
      path: '/datasets'
      fullPath: '/$chainSlug/datasets'
      preLoaderRoute: typeof ChainSlugLayoutDatasetsRouteImport
      parentRoute: typeof ChainSlugLayoutRoute
    }
    '/$chainSlug/_layout/apps': {
      id: '/$chainSlug/_layout/apps'
      path: '/apps'
      fullPath: '/$chainSlug/apps'
      preLoaderRoute: typeof ChainSlugLayoutAppsRouteImport
      parentRoute: typeof ChainSlugLayoutRoute
    }
    '/$chainSlug/_layout/account': {
      id: '/$chainSlug/_layout/account'
      path: '/account'
      fullPath: '/$chainSlug/account'
      preLoaderRoute: typeof ChainSlugLayoutAccountRouteImport
      parentRoute: typeof ChainSlugLayoutRoute
    }
    '/$chainSlug/_layout/$': {
      id: '/$chainSlug/_layout/$'
      path: '/$'
      fullPath: '/$chainSlug/$'
      preLoaderRoute: typeof ChainSlugLayoutSplatRouteImport
      parentRoute: typeof ChainSlugLayoutRoute
    }
    '/$chainSlug/_layout/workerpool/$workerpoolAddress': {
      id: '/$chainSlug/_layout/workerpool/$workerpoolAddress'
      path: '/workerpool/$workerpoolAddress'
      fullPath: '/$chainSlug/workerpool/$workerpoolAddress'
      preLoaderRoute: typeof ChainSlugLayoutWorkerpoolWorkerpoolAddressRouteImport
      parentRoute: typeof ChainSlugLayoutRoute
    }
    '/$chainSlug/_layout/tx/$txHash': {
      id: '/$chainSlug/_layout/tx/$txHash'
      path: '/tx/$txHash'
      fullPath: '/$chainSlug/tx/$txHash'
      preLoaderRoute: typeof ChainSlugLayoutTxTxHashRouteImport
      parentRoute: typeof ChainSlugLayoutRoute
    }
    '/$chainSlug/_layout/task/$taskId': {
      id: '/$chainSlug/_layout/task/$taskId'
      path: '/task/$taskId'
      fullPath: '/$chainSlug/task/$taskId'
      preLoaderRoute: typeof ChainSlugLayoutTaskTaskIdRouteImport
      parentRoute: typeof ChainSlugLayoutRoute
    }
    '/$chainSlug/_layout/search/$search': {
      id: '/$chainSlug/_layout/search/$search'
      path: '/search/$search'
      fullPath: '/$chainSlug/search/$search'
      preLoaderRoute: typeof ChainSlugLayoutSearchSearchRouteImport
      parentRoute: typeof ChainSlugLayoutRoute
    }
    '/$chainSlug/_layout/deal/$dealId': {
      id: '/$chainSlug/_layout/deal/$dealId'
      path: '/deal/$dealId'
      fullPath: '/$chainSlug/deal/$dealId'
      preLoaderRoute: typeof ChainSlugLayoutDealDealIdRouteImport
      parentRoute: typeof ChainSlugLayoutRoute
    }
    '/$chainSlug/_layout/dataset/$datasetAddress': {
      id: '/$chainSlug/_layout/dataset/$datasetAddress'
      path: '/dataset/$datasetAddress'
      fullPath: '/$chainSlug/dataset/$datasetAddress'
      preLoaderRoute: typeof ChainSlugLayoutDatasetDatasetAddressRouteImport
      parentRoute: typeof ChainSlugLayoutRoute
    }
    '/$chainSlug/_layout/app/$appAddress': {
      id: '/$chainSlug/_layout/app/$appAddress'
      path: '/app/$appAddress'
      fullPath: '/$chainSlug/app/$appAddress'
      preLoaderRoute: typeof ChainSlugLayoutAppAppAddressRouteImport
      parentRoute: typeof ChainSlugLayoutRoute
    }
    '/$chainSlug/_layout/address/$addressAddress': {
      id: '/$chainSlug/_layout/address/$addressAddress'
      path: '/address/$addressAddress'
      fullPath: '/$chainSlug/address/$addressAddress'
      preLoaderRoute: typeof ChainSlugLayoutAddressAddressAddressRouteImport
      parentRoute: typeof ChainSlugLayoutRoute
    }
  }
}

interface ChainSlugLayoutRouteChildren {
  ChainSlugLayoutSplatRoute: typeof ChainSlugLayoutSplatRoute
  ChainSlugLayoutAccountRoute: typeof ChainSlugLayoutAccountRoute
  ChainSlugLayoutAppsRoute: typeof ChainSlugLayoutAppsRoute
  ChainSlugLayoutDatasetsRoute: typeof ChainSlugLayoutDatasetsRoute
  ChainSlugLayoutDealsRoute: typeof ChainSlugLayoutDealsRoute
  ChainSlugLayoutTasksRoute: typeof ChainSlugLayoutTasksRoute
  ChainSlugLayoutWorkerpoolsRoute: typeof ChainSlugLayoutWorkerpoolsRoute
  ChainSlugLayoutIndexRoute: typeof ChainSlugLayoutIndexRoute
  ChainSlugLayoutAddressAddressAddressRoute: typeof ChainSlugLayoutAddressAddressAddressRoute
  ChainSlugLayoutAppAppAddressRoute: typeof ChainSlugLayoutAppAppAddressRoute
  ChainSlugLayoutDatasetDatasetAddressRoute: typeof ChainSlugLayoutDatasetDatasetAddressRoute
  ChainSlugLayoutDealDealIdRoute: typeof ChainSlugLayoutDealDealIdRoute
  ChainSlugLayoutSearchSearchRoute: typeof ChainSlugLayoutSearchSearchRoute
  ChainSlugLayoutTaskTaskIdRoute: typeof ChainSlugLayoutTaskTaskIdRoute
  ChainSlugLayoutTxTxHashRoute: typeof ChainSlugLayoutTxTxHashRoute
  ChainSlugLayoutWorkerpoolWorkerpoolAddressRoute: typeof ChainSlugLayoutWorkerpoolWorkerpoolAddressRoute
}

const ChainSlugLayoutRouteChildren: ChainSlugLayoutRouteChildren = {
  ChainSlugLayoutSplatRoute: ChainSlugLayoutSplatRoute,
  ChainSlugLayoutAccountRoute: ChainSlugLayoutAccountRoute,
  ChainSlugLayoutAppsRoute: ChainSlugLayoutAppsRoute,
  ChainSlugLayoutDatasetsRoute: ChainSlugLayoutDatasetsRoute,
  ChainSlugLayoutDealsRoute: ChainSlugLayoutDealsRoute,
  ChainSlugLayoutTasksRoute: ChainSlugLayoutTasksRoute,
  ChainSlugLayoutWorkerpoolsRoute: ChainSlugLayoutWorkerpoolsRoute,
  ChainSlugLayoutIndexRoute: ChainSlugLayoutIndexRoute,
  ChainSlugLayoutAddressAddressAddressRoute:
    ChainSlugLayoutAddressAddressAddressRoute,
  ChainSlugLayoutAppAppAddressRoute: ChainSlugLayoutAppAppAddressRoute,
  ChainSlugLayoutDatasetDatasetAddressRoute:
    ChainSlugLayoutDatasetDatasetAddressRoute,
  ChainSlugLayoutDealDealIdRoute: ChainSlugLayoutDealDealIdRoute,
  ChainSlugLayoutSearchSearchRoute: ChainSlugLayoutSearchSearchRoute,
  ChainSlugLayoutTaskTaskIdRoute: ChainSlugLayoutTaskTaskIdRoute,
  ChainSlugLayoutTxTxHashRoute: ChainSlugLayoutTxTxHashRoute,
  ChainSlugLayoutWorkerpoolWorkerpoolAddressRoute:
    ChainSlugLayoutWorkerpoolWorkerpoolAddressRoute,
}

const ChainSlugLayoutRouteWithChildren = ChainSlugLayoutRoute._addFileChildren(
  ChainSlugLayoutRouteChildren,
)

interface ChainSlugRouteChildren {
  ChainSlugLayoutRoute: typeof ChainSlugLayoutRouteWithChildren
}

const ChainSlugRouteChildren: ChainSlugRouteChildren = {
  ChainSlugLayoutRoute: ChainSlugLayoutRouteWithChildren,
}

const ChainSlugRouteWithChildren = ChainSlugRoute._addFileChildren(
  ChainSlugRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChainSlugRoute: ChainSlugRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
