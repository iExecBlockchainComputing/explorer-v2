/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as WorkerpoolsIndexImport } from './routes/workerpools/index'
import { Route as TasksIndexImport } from './routes/tasks/index'
import { Route as DealsIndexImport } from './routes/deals/index'
import { Route as AppsIndexImport } from './routes/apps/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WorkerpoolsIndexRoute = WorkerpoolsIndexImport.update({
  id: '/workerpools/',
  path: '/workerpools/',
  getParentRoute: () => rootRoute,
} as any)

const TasksIndexRoute = TasksIndexImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => rootRoute,
} as any)

const DealsIndexRoute = DealsIndexImport.update({
  id: '/deals/',
  path: '/deals/',
  getParentRoute: () => rootRoute,
} as any)

const AppsIndexRoute = AppsIndexImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/apps/': {
      id: '/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AppsIndexImport
      parentRoute: typeof rootRoute
    }
    '/deals/': {
      id: '/deals/'
      path: '/deals'
      fullPath: '/deals'
      preLoaderRoute: typeof DealsIndexImport
      parentRoute: typeof rootRoute
    }
    '/tasks/': {
      id: '/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksIndexImport
      parentRoute: typeof rootRoute
    }
    '/workerpools/': {
      id: '/workerpools/'
      path: '/workerpools'
      fullPath: '/workerpools'
      preLoaderRoute: typeof WorkerpoolsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/apps': typeof AppsIndexRoute
  '/deals': typeof DealsIndexRoute
  '/tasks': typeof TasksIndexRoute
  '/workerpools': typeof WorkerpoolsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/apps': typeof AppsIndexRoute
  '/deals': typeof DealsIndexRoute
  '/tasks': typeof TasksIndexRoute
  '/workerpools': typeof WorkerpoolsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/apps/': typeof AppsIndexRoute
  '/deals/': typeof DealsIndexRoute
  '/tasks/': typeof TasksIndexRoute
  '/workerpools/': typeof WorkerpoolsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/apps' | '/deals' | '/tasks' | '/workerpools'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/apps' | '/deals' | '/tasks' | '/workerpools'
  id: '__root__' | '/' | '/apps/' | '/deals/' | '/tasks/' | '/workerpools/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppsIndexRoute: typeof AppsIndexRoute
  DealsIndexRoute: typeof DealsIndexRoute
  TasksIndexRoute: typeof TasksIndexRoute
  WorkerpoolsIndexRoute: typeof WorkerpoolsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppsIndexRoute: AppsIndexRoute,
  DealsIndexRoute: DealsIndexRoute,
  TasksIndexRoute: TasksIndexRoute,
  WorkerpoolsIndexRoute: WorkerpoolsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/apps/",
        "/deals/",
        "/tasks/",
        "/workerpools/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/apps/": {
      "filePath": "apps/index.tsx"
    },
    "/deals/": {
      "filePath": "deals/index.tsx"
    },
    "/tasks/": {
      "filePath": "tasks/index.tsx"
    },
    "/workerpools/": {
      "filePath": "workerpools/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
